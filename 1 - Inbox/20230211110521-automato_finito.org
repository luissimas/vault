:PROPERTIES:
:ID:       ec2b2e55-5924-4dc8-a3d3-2996dada0273
:END:
#+title:Autômato Finito

Um Autômato Finito é *modelo computacional sequencial* representado através de um sistema de estados finitos.

Autômatos Finitos podem ser interpretados como uma máquina *sem memória auxiliar* que processa uma fita de [[id:f8a4e91c-078f-433c-9be4-fb1f4b9d064e][símbolos]] sequencialmente sem alterar a fita. O processamento da fita consiste em, dado o símbolo corrente e o estado atual da máquina, alterar o estado atual com base em um programa ou função de transição.

Diferentes autômatos podem aceitar uma mesma linguagem. Por conta disso, dizemos que dois autômatos finitos $M_1$ e $M_2$ são ditos *equivalentes* se e somente se eles geram a mesma linguagem, ou seja, $L(M_1) = L(M_2)$.

Uma [[id:70808c19-0237-4a2e-8a09-d003667c1278][linguagem]] $L$ é [[id:4d2791ad-0f96-44e3-8f2d-0779fcc26049][regular]] se e somente se existe um autômato finito $M$ capaz de reconhecer $L$, ou seja, tal que $L = L(M)$.

Um autômato finito pode ser representado na forma de um diagrama no qual os estados são representados como nós e as transições são arestas entre os nós.

Em geral, existem três tipos de Autômatos Finitos:

[[id:4dd82715-eeb8-44b3-a830-7d22436b5067][Autômato Finito Determinístico]]
[[id:47c0aa03-db5a-4e2a-a46c-2354ab1b8641][Autômato Finito Não-Determinístico]]
[[id:09462880-18ce-4fff-991a-b39c02d5c78d][Autômato Finito com Movimentos Vazios]]

Em termos de [[id:20ecb870-62df-41a4-b342-115f6368166e][complexidade de algoritmos]], autômatos finitos pertencem à classe mais eficiente em termos de tempo de processamento, usualmente executando um número de operações proporcional ao tamanho da cadeia a ser reconhecida. Em geral, o tempo de processamento não depende do autômato considerado. Entretanto, é possível otimizar um autômato através da [[id:d29657d9-6f28-4c18-9750-ffd2d28c03ef][minimização de seus estados]].
